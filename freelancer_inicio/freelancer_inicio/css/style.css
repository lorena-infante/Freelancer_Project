/*1 rem = 10px*/
/*Color palette*/
:root{
    --aliceBlue: #E8EEF2;
    --paleSilver:#D6C9C9;
    --beauBlue: #C7D3DD;
    --aero: #77B6EA;
    --onyx: #37393A;
    --grisClaro: #DFE9F3;
    /*Another palette*/
    --royalBlueDark:#0A2463;
    --redSalsa: #fb3640;
    --davysGray: #605f5e;
    --celadonBlue: #247ba0;
    --platinum:#e2e2e2;
    --fuentePrincipal: 3.8 rem;
    
    
}
html {
    /* apply a natural box layout model to all elements, but allowing components to change */
    box-sizing: border-box;
    font-size: var(--fuentePrincipal);
}
/* apply a natural box layout model to all elements, but allowing components to change */
*, *:before, *:after {
    box-sizing: inherit;
  }
  /*CSS MATIC*/
  .sombra{
    -webkit-box-shadow: 0px 0px 11px 0px rgba(0,0,0,0.51);
    -moz-box-shadow: 0px 0px 11px 0px rgba(0,0,0,0.51);
    box-shadow: 0px 0px 11px 0px rgba(0,0,0,0.51);
    background-color:  var(--beauBlue);
    padding: 2rem;
    border-radius: 1rem;
  }
  h1{
    font-size: 3.8 rem;
  }
  h2{
    font-size: 2.8 rem;
  }
  h3{
    font-size: 1.8 rem;
  }
  h1,h2,h3{
    text-align: center;

  }
.web-title{
    font-size: 15px;
}


body {
    font-size: 16px;
    background-color: var(--aliceBlue);
    font-family: 'Raleway', sans-serif;
    /*Gradient for background*/
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(#E8EEF2) 100%);
}

.navegacion-principal{
    
    display: flex;
    flex-direction: column;
    align-items: center;
    
}

/*Servicios*/
@media (min-width: 768px) {
    .servicios{
        display:grid;
    /*  grid-template-columns: 300px 300px;
        grid-template-rows: 200px 800px;*/
        /*Simpler way to call grid: row Height row Width / col Height col Width*/
       /* grid: 200px 200px / 300px 300px;*/
    
       /*Using fractions (1 fraction that is divided into parallel parts throughout the 100% of the space selected)
        grid-template-columns: 1fr 1fr 1fr;
       */
       
       /*Same of above but simpler: repeat(number of times you want to be repeated, number of fr you want)*/
       grid-template-columns: repeat(3,1fr);

       /*espaciado dentro de la columna*/
       column-gap: 1rem;
    }
}



/*MediaQuery para converit en columna en teléfono el menu. Las propiedades del padre se heredan*/
@media (min-width: 480px) {
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-evenly;
        
    }
}
.navegacion-principal a {
    color: var(--onyx);
    padding: 1rem;
    text-decoration: none;
    font-weight: bold;
    
}

.navegacion-principal a:hover{
    background-color: var(--aliceBlue);
}

/*navegacion principal*/
.nav-bg{
    background-color: var(--aero);
}
.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem; 
}

.contenido-hero{
    position:absolute;
    width:100%;
    height: 100%;
    background-color: rgba(0,0,0,0.7);/*Anterior syntax*/
    background-color: rgb(0 0 0 /70%); /*Nueva syntax*/
    color: var(--aliceBlue);
    display:flex;
    flex-direction: column;
    align-items: center;
    
}
.contenido-hero h2, 
.contenido-hero p{

    color: var();
}

.contenedor{
    max-width:1200px;
 /* margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto; Este es el orden para leer los valores de margin (clock)
    También se puede:
    margin: 0 auto y así le aplica todos los cambios a las 4 posiciones en el mismo orden;*/
    margin: 0 auto;
    
}
/*MediaQuery
@media (min-width:480px ) {
    body{
        background-color: red;
    }
     
}
*/
.ubicacion{
    display:flex;
    align-items: center;
}

.boton{
    background-color: var(--redSalsa);
    color: var(--platinum);
    padding: 1rem 2rem;
    margin-top: 2rem;
    font-size: 1rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: 1rem;
    width:90%;
    text-align:center;
    border:none;
}
@media (min-width: 768px) {
    .boton{
        width:auto;
    }
     
}

.boton:hover{
    cursor:pointer;
}


/*Utilidades*/

.w-sm-100{
    width:100%;
}
@media (min-width: 768px) {
     .w-sm-100{
         width:auto;
     }
}

.flex{
    display:flex;

}

.alinear-derecha{
justify-content: flex-end;
}

.servicio{
display: flex;
flex-direction: column;
align-items: center;
}

.servicio h3{
    color: var(--royalBlueDark);
    font-weight: normal;
}

.servicio .iconos{
    height:10rem;
    width:10rem;
    background-color: var(--celadonBlue);
    border-radius: 80%;
    display:flex;
    justify-content: space-evenly;
    align-items: center;
}

.servicio p {
/*Interlineado*/
    line-height: 2;
    text-align: center;
}

/*Formulario contacto*/

.formulario{
    background-color: var(--celadonBlue);
    width:min(60rem,100%); /*Toma el valor mínino entre los dos parámetros, ahorra mediaQueries porque se adapta al tamaño de pantalla utilizado*/
    margin: 0 auto; /*margin 0 auto. para centrar horizontalmente. Utilizado en elementos cuyo padre NO es un display flex y sea un bloque.Se pone Justify-content cuando el padre SÍ sea un display flex*/
    padding:2rem;
    border-radius:1rem;
}

.formulario fieldset{
    border:none;
}

.formulario legend{
    text-align:center;
    font-size:1.4rem; 
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom:2rem;
    color: var(--grisClaro);
}

/*Contenedor campos*/
@media (min-width: 768px) {
    .contenedor-campos{
        display:grid;
        grid-template-columns: repeat(2,1fr);
        grid-template-rows: auto auto 9rem ; /*son 3 filas, por lo tanto 3 parámetros para esta propiedad*/
        column-gap: 1rem;
    }

    .campo:nth-child(3),
    .campo:nth-child(4) { /*Crea una pseudo clase que evita crear nvas clases en html. En el () va la posición numérica del campo que quiero modificar. Los arreglos comienzan desde 1*/
        grid-column: 1/3; /*Este es el número de columnas que quiero abarcar: desde/hasta */
        /*Se puede modificar wl html sin tocarlo, usando solo css, con grid. Si quisiera que esta row se mostrara en el campo donde está el campo de escribir el mensaje, se debe hacer lo siguiente:
        grid-row: row inicial/row final (en este caso sería grid-row:3/4)*/
    }

}

.campo{
    margin-bottom:1rem;
    color:var(--grisClaro);
    font-weight: bold;
    margin-bottom:0.5rem;
    display:block;


}

/*.campo input[type="text"] esta es una manera de llamar cada tipo de clase*/
.input-text{
    width:100%;
    border:none;
    padding: .5rem;
    border-radius: 0.5rem;
}

textarea.input-text{
    height: 7.8rem;
}
/*
.enviar .boton{
    width:100%;
}*/

/*Footer*/
.footer{
    text-align: center;
}